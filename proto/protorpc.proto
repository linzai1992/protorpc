// Copyright 2014. All Rights Reserved.
// Author: yeshunping@gmail.com (Shunping Ye)

import "google/protobuf/descriptor.proto";

package protorpc;

option java_package = "com.github.protorpc";
option cc_generic_services = true;

enum ErrorCode {
  ErrorCode_kOk = 0;
  ErrorCode_kFailParseRequest = 1;
  ErrorCode_kFailParseResponse = 2;
  ErrorCode_kRequestTimeOut = 3;
};

enum CompressType {
  CompressType_kNone = 0;
  CompressType_kSnappy = 1;
}

message RpcMeta {
  enum MetaType {
    MetaType_kRequest = 0;
    MetaType_kResponse = 1;
  };

  optional MetaType type = 1;
  required int64 sequence_id = 2;

  // Field for request type,
  optional string method = 100;
  optional int64 timeout = 101;

  // Field for response type,
  // If the request failed.
  optional bool failed = 200;
  // If the request is canceled by client. If it's set, failed must be set too.
  optional bool canceled = 201;
  optional int32 error_code = 202;
  optional string reason = 203;
  optional CompressType compress_type = 204;
}

extend google.protobuf.ServiceOptions {
  // Timeout in milliseconds, at service level.
  optional int64 service_timeout = 20000 [default = 10000];
}

extend google.protobuf.MethodOptions {
  optional CompressType request_compress_type = 20001 [default = CompressType_kSnappy];
  optional CompressType response_compress_type = 20002 [default = CompressType_kSnappy];

  // Timeout in milliseconds, at method level.
  optional int64 method_timeout = 20000;
}

message EmptyRequest {
}

message EmptyResponse {
}

message HealthResponse {
  required string health = 1;
}

message MethodDescriptor {
  required string name = 1;
}

message ServiceDescriptor {
  required string name = 1;
  repeated MethodDescriptor methods = 2;
}

message EnumValueDescriptor {
  required string name = 1;
  required int32 number = 2;
}

message EnumDescriptor {
  required string name = 1;
  repeated EnumValueDescriptor values = 2;
}

message FieldDescriptor {
  required string name = 1;
  required int32 number = 2;
  required int32 label = 3;
  required int32 type = 4;
  optional string type_name = 5;
  optional string default_value = 6;
}

message MessageDescriptor {
  required string name = 1;
  repeated FieldDescriptor fields = 2;
}

message AllServiceDescriptors {
  repeated ServiceDescriptor services = 1;
}

message MethodInputTypeDescriptorsRequest {
  required string method_full_name = 1;
}

message MethodInputTypeDescriptorsResponse {
  required string request_type = 1;
  repeated MessageDescriptor message_types = 2;
  repeated EnumDescriptor enum_types = 3;
}

service RpcBaseService {
  option (protorpc.service_timeout) = 3000;

  rpc Health(EmptyRequest) returns(HealthResponse);
  rpc GetAllServiceDescriptors(EmptyRequest) returns(AllServiceDescriptors);
  rpc GetMethodInputTypeDescriptors(MethodInputTypeDescriptorsRequest) returns(MethodInputTypeDescriptorsResponse);
}
